Grammer #3:

//expression	-> literal | unary | binary | ternary | n_ary | grouping
literal		-> integer | double | string | boolean | null

integer		-> "0" | ["-"] {digits}
double		-> [integer] "." digits {digits} | integer "." {digits}

digits 		-> "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9"

expression	-> conditional
conditional -> conditional ( ("?") conditional (":") conditional)*
equality	-> comparison ( ("==" | "!=") comparison )*
comparison	-> addition ( (">=" | "<=" | "<" | ">") addition )*
addition	-> multi ( ("+" | "-") multi )*
multi		-> exponent ( ("*" | "/" | "%") exponent )*
exponent	-> unary ( ("^") unary )*
unary		-> ("-" | "!") unary | primary
primary		-> literal | "(" expression ")" | "|" expression "|"
