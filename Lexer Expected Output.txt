(  0,  0)     COMMENT : //this is a comment test
(  3,  1)  IDENTIFIER : this
(  4,  1)  IDENTIFIER : is
(  4,  1)  IDENTIFIER : a
( 10,  1)  IDENTIFIER : comment
( 13,  1)  IDENTIFIER : test
( 13,  1)     COMMENT : //
(  3,  2)  IDENTIFIER : this
(  4,  2)  IDENTIFIER : is
(  4,  2)  IDENTIFIER : a
(  4,  2)     COMMENT : //comment test
( 24,  4)     COMMENT : /*this is a comment test*/
(  3,  5)  IDENTIFIER : this
( 17,  5)     COMMENT : /*is a comment*/
( 20,  5)  IDENTIFIER : test
(  3,  6)  IDENTIFIER : this
(  4,  6)  IDENTIFIER : is
(  4,  6)  IDENTIFIER : a
(  6,  6)     COMMENT : /**/
( 12,  6)  IDENTIFIER : comment
( 15,  6)  IDENTIFIER : test
(  3,  7)  IDENTIFIER : this
(  4,  7)  IDENTIFIER : is
(  4,  7)  IDENTIFIER : a
( 58,  9)     COMMENT : /*comment testthis is a comment testthis is a comment */
( 61,  9)  IDENTIFIER : test
(  0, 11)     COMMENT : //strings
( 12, 12)     LITERAL : "string test"
(  7, 13)     LITERAL : "string"
( 10, 13)  IDENTIFIER : test
( 11, 14)       ERROR : "string test
(  5, 15)        TYPE : string
(  6, 15)     LITERAL : ""
(  9, 15)  IDENTIFIER : test
( 10, 15)     LITERAL : ""
(  0, 17)     COMMENT : //chars
(  2, 18)     LITERAL : 'c'
(  4, 18)     LITERAL : 'h'
(  6, 18)     LITERAL : 'a'
(  8, 18)     LITERAL : 'r'
(  3, 19)       ERROR : 'ch'
(  6, 19)       ERROR : 'ar'
(  9, 20)       ERROR : 'char test
(  0, 22)     COMMENT : //doubles and ints
(  2, 23)     LITERAL : 123
(  4, 24)     LITERAL : 123.0
(  6, 25)     LITERAL : 123.123
(  4, 26)     LITERAL : 0.123
(  0, 27)     LITERAL : 0
(  2, 28)     LITERAL : 0.0
(  3, 29)     LITERAL : .123
(  3, 30)     LITERAL : 123.
(  6, 31)     LITERAL : 123.321
(  9, 31)     LITERAL : .123
(  5, 32)  IDENTIFIER : cat123
(  8, 32)     LITERAL : .123
(  3, 33)     LITERAL : 123.
(  5, 33)  IDENTIFIER : cat
(  8, 33)     LITERAL : .123
(  0, 35)     COMMENT : //booleans
(  3, 36)  IDENTIFIER : this
(  4, 36)  IDENTIFIER : is
(  7, 36)     LITERAL : true
(  8, 36)  IDENTIFIER : or
( 12, 36)     LITERAL : false
( 22, 36)  IDENTIFIER : ortruefalse
(  0, 38)     COMMENT : //grouping
(  0, 39)  DELINEATOR : (
(  1, 39)    OPERATOR : |
(  1, 39)  DELINEATOR : {
(  2, 39)  DELINEATOR : ;
(  3, 39)  DELINEATOR : }
(  4, 39)    OPERATOR : |
(  4, 39)  DELINEATOR : )
(  5, 39)  DELINEATOR : ;
(  0, 41)    OPERATOR : |
(  0, 41)     LITERAL : 3
(  0, 41)    OPERATOR : *
(  0, 41)     LITERAL : 2
(  0, 41)    OPERATOR : +
(  0, 41)  DELINEATOR : (
(  1, 41)     LITERAL : 3
(  1, 41)    OPERATOR : ^
(  1, 41)     LITERAL : 3
(  1, 41)  DELINEATOR : )
(  2, 41)    OPERATOR : ^
(  2, 41)     LITERAL : 3
(  2, 41)    OPERATOR : -
(  4, 41)     LITERAL : 1.4
(  4, 41)    OPERATOR : +
(  4, 41)     LITERAL : 3
(  4, 41)    OPERATOR : |
(  4, 41)    OPERATOR : =
(  4, 41)     LITERAL : 7
( 28, 43)       ERROR : /*test of block comment errors